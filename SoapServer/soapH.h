/* soapH.h
   Generated by gSOAP 2.8.3 from f:\Programming\Projects\TaskShifter\SoapServer\TaskShifterServer.h

Copyright(C) 2000-2011, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
1) GPL or 2) Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (8)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin_send(soap) || ((data)->soap_serialize(soap), 0) || (data)->soap_put(soap, "string", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#define soap_new_std__string(soap, n) soap_instantiate_std__string(soap, n, NULL, NULL, NULL)


#define soap_delete_std__string(soap, p) soap_delete(soap, p)

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Fault(soap, data), 0) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#define soap_new_SOAP_ENV__Fault(soap, n) soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Fault(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Reason(soap, data), 0) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#define soap_new_SOAP_ENV__Reason(soap, n) soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Reason(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Detail(soap, data), 0) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#define soap_new_SOAP_ENV__Detail(soap, n) soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Detail(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Code(soap, data), 0) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#define soap_new_SOAP_ENV__Code(soap, n) soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Code(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin_send(soap) || (soap_serialize_SOAP_ENV__Header(soap, data), 0) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#define soap_new_SOAP_ENV__Header(soap, n) soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL)


#define soap_delete_SOAP_ENV__Header(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns1__SubmitTimesheet
#define SOAP_TYPE_ns1__SubmitTimesheet (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__SubmitTimesheet(struct soap*, struct ns1__SubmitTimesheet *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__SubmitTimesheet(struct soap*, const struct ns1__SubmitTimesheet *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SubmitTimesheet(struct soap*, const char*, int, const struct ns1__SubmitTimesheet *, const char*);
SOAP_FMAC3 struct ns1__SubmitTimesheet * SOAP_FMAC4 soap_in_ns1__SubmitTimesheet(struct soap*, const char*, struct ns1__SubmitTimesheet *, const char*);

#ifndef soap_write_ns1__SubmitTimesheet
#define soap_write_ns1__SubmitTimesheet(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__SubmitTimesheet(soap, data), 0) || soap_put_ns1__SubmitTimesheet(soap, data, "ns1:SubmitTimesheet", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__SubmitTimesheet(struct soap*, const struct ns1__SubmitTimesheet *, const char*, const char*);

#ifndef soap_read_ns1__SubmitTimesheet
#define soap_read_ns1__SubmitTimesheet(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__SubmitTimesheet(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__SubmitTimesheet * SOAP_FMAC4 soap_get_ns1__SubmitTimesheet(struct soap*, struct ns1__SubmitTimesheet *, const char*, const char*);

#define soap_new_ns1__SubmitTimesheet(soap, n) soap_instantiate_ns1__SubmitTimesheet(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__SubmitTimesheet(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__SubmitTimesheet * SOAP_FMAC2 soap_instantiate_ns1__SubmitTimesheet(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__SubmitTimesheet(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__SubmitTimesheetResponse
#define SOAP_TYPE_ns1__SubmitTimesheetResponse (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__SubmitTimesheetResponse(struct soap*, struct ns1__SubmitTimesheetResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__SubmitTimesheetResponse(struct soap*, const struct ns1__SubmitTimesheetResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__SubmitTimesheetResponse(struct soap*, const char*, int, const struct ns1__SubmitTimesheetResponse *, const char*);
SOAP_FMAC3 struct ns1__SubmitTimesheetResponse * SOAP_FMAC4 soap_in_ns1__SubmitTimesheetResponse(struct soap*, const char*, struct ns1__SubmitTimesheetResponse *, const char*);

#ifndef soap_write_ns1__SubmitTimesheetResponse
#define soap_write_ns1__SubmitTimesheetResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__SubmitTimesheetResponse(soap, data), 0) || soap_put_ns1__SubmitTimesheetResponse(soap, data, "ns1:SubmitTimesheetResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__SubmitTimesheetResponse(struct soap*, const struct ns1__SubmitTimesheetResponse *, const char*, const char*);

#ifndef soap_read_ns1__SubmitTimesheetResponse
#define soap_read_ns1__SubmitTimesheetResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__SubmitTimesheetResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__SubmitTimesheetResponse * SOAP_FMAC4 soap_get_ns1__SubmitTimesheetResponse(struct soap*, struct ns1__SubmitTimesheetResponse *, const char*, const char*);

#define soap_new_ns1__SubmitTimesheetResponse(soap, n) soap_instantiate_ns1__SubmitTimesheetResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__SubmitTimesheetResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__SubmitTimesheetResponse * SOAP_FMAC2 soap_instantiate_ns1__SubmitTimesheetResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__SubmitTimesheetResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__AddTask
#define SOAP_TYPE_ns1__AddTask (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__AddTask(struct soap*, struct ns1__AddTask *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__AddTask(struct soap*, const struct ns1__AddTask *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__AddTask(struct soap*, const char*, int, const struct ns1__AddTask *, const char*);
SOAP_FMAC3 struct ns1__AddTask * SOAP_FMAC4 soap_in_ns1__AddTask(struct soap*, const char*, struct ns1__AddTask *, const char*);

#ifndef soap_write_ns1__AddTask
#define soap_write_ns1__AddTask(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__AddTask(soap, data), 0) || soap_put_ns1__AddTask(soap, data, "ns1:AddTask", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__AddTask(struct soap*, const struct ns1__AddTask *, const char*, const char*);

#ifndef soap_read_ns1__AddTask
#define soap_read_ns1__AddTask(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__AddTask(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__AddTask * SOAP_FMAC4 soap_get_ns1__AddTask(struct soap*, struct ns1__AddTask *, const char*, const char*);

#define soap_new_ns1__AddTask(soap, n) soap_instantiate_ns1__AddTask(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__AddTask(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__AddTask * SOAP_FMAC2 soap_instantiate_ns1__AddTask(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__AddTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__AddTaskResponse
#define SOAP_TYPE_ns1__AddTaskResponse (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__AddTaskResponse(struct soap*, struct ns1__AddTaskResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__AddTaskResponse(struct soap*, const struct ns1__AddTaskResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__AddTaskResponse(struct soap*, const char*, int, const struct ns1__AddTaskResponse *, const char*);
SOAP_FMAC3 struct ns1__AddTaskResponse * SOAP_FMAC4 soap_in_ns1__AddTaskResponse(struct soap*, const char*, struct ns1__AddTaskResponse *, const char*);

#ifndef soap_write_ns1__AddTaskResponse
#define soap_write_ns1__AddTaskResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__AddTaskResponse(soap, data), 0) || soap_put_ns1__AddTaskResponse(soap, data, "ns1:AddTaskResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__AddTaskResponse(struct soap*, const struct ns1__AddTaskResponse *, const char*, const char*);

#ifndef soap_read_ns1__AddTaskResponse
#define soap_read_ns1__AddTaskResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__AddTaskResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__AddTaskResponse * SOAP_FMAC4 soap_get_ns1__AddTaskResponse(struct soap*, struct ns1__AddTaskResponse *, const char*, const char*);

#define soap_new_ns1__AddTaskResponse(soap, n) soap_instantiate_ns1__AddTaskResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__AddTaskResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__AddTaskResponse * SOAP_FMAC2 soap_instantiate_ns1__AddTaskResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__AddTaskResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetPolicy
#define SOAP_TYPE_ns1__GetPolicy (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GetPolicy(struct soap*, struct ns1__GetPolicy *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GetPolicy(struct soap*, const struct ns1__GetPolicy *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetPolicy(struct soap*, const char*, int, const struct ns1__GetPolicy *, const char*);
SOAP_FMAC3 struct ns1__GetPolicy * SOAP_FMAC4 soap_in_ns1__GetPolicy(struct soap*, const char*, struct ns1__GetPolicy *, const char*);

#ifndef soap_write_ns1__GetPolicy
#define soap_write_ns1__GetPolicy(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__GetPolicy(soap, data), 0) || soap_put_ns1__GetPolicy(soap, data, "ns1:GetPolicy", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GetPolicy(struct soap*, const struct ns1__GetPolicy *, const char*, const char*);

#ifndef soap_read_ns1__GetPolicy
#define soap_read_ns1__GetPolicy(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetPolicy(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__GetPolicy * SOAP_FMAC4 soap_get_ns1__GetPolicy(struct soap*, struct ns1__GetPolicy *, const char*, const char*);

#define soap_new_ns1__GetPolicy(soap, n) soap_instantiate_ns1__GetPolicy(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__GetPolicy(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__GetPolicy * SOAP_FMAC2 soap_instantiate_ns1__GetPolicy(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetPolicy(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetPolicyResponse
#define SOAP_TYPE_ns1__GetPolicyResponse (22)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GetPolicyResponse(struct soap*, struct ns1__GetPolicyResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GetPolicyResponse(struct soap*, const struct ns1__GetPolicyResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetPolicyResponse(struct soap*, const char*, int, const struct ns1__GetPolicyResponse *, const char*);
SOAP_FMAC3 struct ns1__GetPolicyResponse * SOAP_FMAC4 soap_in_ns1__GetPolicyResponse(struct soap*, const char*, struct ns1__GetPolicyResponse *, const char*);

#ifndef soap_write_ns1__GetPolicyResponse
#define soap_write_ns1__GetPolicyResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__GetPolicyResponse(soap, data), 0) || soap_put_ns1__GetPolicyResponse(soap, data, "ns1:GetPolicyResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GetPolicyResponse(struct soap*, const struct ns1__GetPolicyResponse *, const char*, const char*);

#ifndef soap_read_ns1__GetPolicyResponse
#define soap_read_ns1__GetPolicyResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetPolicyResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__GetPolicyResponse * SOAP_FMAC4 soap_get_ns1__GetPolicyResponse(struct soap*, struct ns1__GetPolicyResponse *, const char*, const char*);

#define soap_new_ns1__GetPolicyResponse(soap, n) soap_instantiate_ns1__GetPolicyResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__GetPolicyResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__GetPolicyResponse * SOAP_FMAC2 soap_instantiate_ns1__GetPolicyResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetPolicyResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__Struct_2
#define SOAP_TYPE__Struct_2 (19)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__Struct_2(struct soap*, struct _Struct_2 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__Struct_2(struct soap*, struct _Struct_2 const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__Struct_2(struct soap*, const char*, int, const struct _Struct_2 *, const char*);
SOAP_FMAC3 struct _Struct_2 * SOAP_FMAC4 soap_in__Struct_2(struct soap*, const char*, struct _Struct_2 *, const char*);

#ifndef soap_write__Struct_2
#define soap_write__Struct_2(soap, data) ( soap_begin_send(soap) || (soap_serialize__Struct_2(soap, data), 0) || soap_put__Struct_2(soap, data, "Struct-2", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__Struct_2(struct soap*, const struct _Struct_2 *, const char*, const char*);

#ifndef soap_read__Struct_2
#define soap_read__Struct_2(soap, data) ( soap_begin_recv(soap) || !soap_get__Struct_2(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _Struct_2 * SOAP_FMAC4 soap_get__Struct_2(struct soap*, struct _Struct_2 *, const char*, const char*);

#define soap_new__Struct_2(soap, n) soap_instantiate__Struct_2(soap, n, NULL, NULL, NULL)


#define soap_delete__Struct_2(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct _Struct_2 * SOAP_FMAC2 soap_instantiate__Struct_2(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__Struct_2(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetUserTasks
#define SOAP_TYPE_ns1__GetUserTasks (18)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GetUserTasks(struct soap*, struct ns1__GetUserTasks *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GetUserTasks(struct soap*, const struct ns1__GetUserTasks *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetUserTasks(struct soap*, const char*, int, const struct ns1__GetUserTasks *, const char*);
SOAP_FMAC3 struct ns1__GetUserTasks * SOAP_FMAC4 soap_in_ns1__GetUserTasks(struct soap*, const char*, struct ns1__GetUserTasks *, const char*);

#ifndef soap_write_ns1__GetUserTasks
#define soap_write_ns1__GetUserTasks(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__GetUserTasks(soap, data), 0) || soap_put_ns1__GetUserTasks(soap, data, "ns1:GetUserTasks", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GetUserTasks(struct soap*, const struct ns1__GetUserTasks *, const char*, const char*);

#ifndef soap_read_ns1__GetUserTasks
#define soap_read_ns1__GetUserTasks(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetUserTasks(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__GetUserTasks * SOAP_FMAC4 soap_get_ns1__GetUserTasks(struct soap*, struct ns1__GetUserTasks *, const char*, const char*);

#define soap_new_ns1__GetUserTasks(soap, n) soap_instantiate_ns1__GetUserTasks(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__GetUserTasks(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__GetUserTasks * SOAP_FMAC2 soap_instantiate_ns1__GetUserTasks(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetUserTasks(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__GetUserTasksResponse
#define SOAP_TYPE_ns1__GetUserTasksResponse (17)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__GetUserTasksResponse(struct soap*, struct ns1__GetUserTasksResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__GetUserTasksResponse(struct soap*, const struct ns1__GetUserTasksResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__GetUserTasksResponse(struct soap*, const char*, int, const struct ns1__GetUserTasksResponse *, const char*);
SOAP_FMAC3 struct ns1__GetUserTasksResponse * SOAP_FMAC4 soap_in_ns1__GetUserTasksResponse(struct soap*, const char*, struct ns1__GetUserTasksResponse *, const char*);

#ifndef soap_write_ns1__GetUserTasksResponse
#define soap_write_ns1__GetUserTasksResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__GetUserTasksResponse(soap, data), 0) || soap_put_ns1__GetUserTasksResponse(soap, data, "ns1:GetUserTasksResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__GetUserTasksResponse(struct soap*, const struct ns1__GetUserTasksResponse *, const char*, const char*);

#ifndef soap_read_ns1__GetUserTasksResponse
#define soap_read_ns1__GetUserTasksResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__GetUserTasksResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__GetUserTasksResponse * SOAP_FMAC4 soap_get_ns1__GetUserTasksResponse(struct soap*, struct ns1__GetUserTasksResponse *, const char*, const char*);

#define soap_new_ns1__GetUserTasksResponse(soap, n) soap_instantiate_ns1__GetUserTasksResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__GetUserTasksResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__GetUserTasksResponse * SOAP_FMAC2 soap_instantiate_ns1__GetUserTasksResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__GetUserTasksResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE__Struct_1
#define SOAP_TYPE__Struct_1 (14)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default__Struct_1(struct soap*, struct _Struct_1 *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__Struct_1(struct soap*, struct _Struct_1 const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__Struct_1(struct soap*, const char*, int, const struct _Struct_1 *, const char*);
SOAP_FMAC3 struct _Struct_1 * SOAP_FMAC4 soap_in__Struct_1(struct soap*, const char*, struct _Struct_1 *, const char*);

#ifndef soap_write__Struct_1
#define soap_write__Struct_1(soap, data) ( soap_begin_send(soap) || (soap_serialize__Struct_1(soap, data), 0) || soap_put__Struct_1(soap, data, "Struct-1", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put__Struct_1(struct soap*, const struct _Struct_1 *, const char*, const char*);

#ifndef soap_read__Struct_1
#define soap_read__Struct_1(soap, data) ( soap_begin_recv(soap) || !soap_get__Struct_1(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct _Struct_1 * SOAP_FMAC4 soap_get__Struct_1(struct soap*, struct _Struct_1 *, const char*, const char*);

#define soap_new__Struct_1(soap, n) soap_instantiate__Struct_1(soap, n, NULL, NULL, NULL)


#define soap_delete__Struct_1(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct _Struct_1 * SOAP_FMAC2 soap_instantiate__Struct_1(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy__Struct_1(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__Connect
#define SOAP_TYPE_ns1__Connect (12)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__Connect(struct soap*, struct ns1__Connect *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__Connect(struct soap*, const struct ns1__Connect *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__Connect(struct soap*, const char*, int, const struct ns1__Connect *, const char*);
SOAP_FMAC3 struct ns1__Connect * SOAP_FMAC4 soap_in_ns1__Connect(struct soap*, const char*, struct ns1__Connect *, const char*);

#ifndef soap_write_ns1__Connect
#define soap_write_ns1__Connect(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__Connect(soap, data), 0) || soap_put_ns1__Connect(soap, data, "ns1:Connect", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__Connect(struct soap*, const struct ns1__Connect *, const char*, const char*);

#ifndef soap_read_ns1__Connect
#define soap_read_ns1__Connect(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__Connect(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__Connect * SOAP_FMAC4 soap_get_ns1__Connect(struct soap*, struct ns1__Connect *, const char*, const char*);

#define soap_new_ns1__Connect(soap, n) soap_instantiate_ns1__Connect(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__Connect(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__Connect * SOAP_FMAC2 soap_instantiate_ns1__Connect(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__Connect(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__ConnectResponse
#define SOAP_TYPE_ns1__ConnectResponse (11)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__ConnectResponse(struct soap*, struct ns1__ConnectResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__ConnectResponse(struct soap*, const struct ns1__ConnectResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__ConnectResponse(struct soap*, const char*, int, const struct ns1__ConnectResponse *, const char*);
SOAP_FMAC3 struct ns1__ConnectResponse * SOAP_FMAC4 soap_in_ns1__ConnectResponse(struct soap*, const char*, struct ns1__ConnectResponse *, const char*);

#ifndef soap_write_ns1__ConnectResponse
#define soap_write_ns1__ConnectResponse(soap, data) ( soap_begin_send(soap) || (soap_serialize_ns1__ConnectResponse(soap, data), 0) || soap_put_ns1__ConnectResponse(soap, data, "ns1:ConnectResponse", NULL) || soap_end_send(soap) )
#endif


SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__ConnectResponse(struct soap*, const struct ns1__ConnectResponse *, const char*, const char*);

#ifndef soap_read_ns1__ConnectResponse
#define soap_read_ns1__ConnectResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__ConnectResponse(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct ns1__ConnectResponse * SOAP_FMAC4 soap_get_ns1__ConnectResponse(struct soap*, struct ns1__ConnectResponse *, const char*, const char*);

#define soap_new_ns1__ConnectResponse(soap, n) soap_instantiate_ns1__ConnectResponse(soap, n, NULL, NULL, NULL)


#define soap_delete_ns1__ConnectResponse(soap, p) soap_delete(soap, p)

SOAP_FMAC1 struct ns1__ConnectResponse * SOAP_FMAC2 soap_instantiate_ns1__ConnectResponse(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__ConnectResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Reason(soap, data), 0) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (38)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Detail(soap, data), 0) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_send(soap) || (soap_serialize_PointerToSOAP_ENV__Code(soap, data), 0) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)


#define soap_serialize__QName(soap, a) soap_serialize_string(soap, a)

SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin_send(soap) || (soap_serialize__QName(soap, data), 0) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin_send(soap) || (soap_serialize_string(soap, data), 0) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap) )
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap) )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#endif

/* End of soapH.h */
